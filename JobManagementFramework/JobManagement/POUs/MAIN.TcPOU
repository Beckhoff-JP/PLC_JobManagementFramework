<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{0711fc19-ddf5-4c28-b96d-7cde88b1723f}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	_state :UINT;
	executor: FB_Executor; // main Executor
	
	_child_executor : REFERENCE TO FB_Executor;
	
	task_blink_1 : FutureTimerBlink;
	task_blink_2 : FutureTimerBlink;
	task_count_1 : FutureCounterBlink;
	task_count_2 : FutureCounterBlink;

	parallel_queue_job_container_creator :FB_ParallelQueueJobContainerCreator;
	future_counter_creator : FutureCounterBlinkCreator;
	future_timer_creator : FutureTimerBlinkCreator;

	
	component1_in : BOOL;
	component1_out : BOOL;
	component2_in : BOOL;
	component2_out : BOOL;
	component3_in : BOOL;
	component3_out : BOOL;
	component4_in : BOOL;
	component4_out : BOOL;

	
	// Dynamic instance use
	_future: InterfaceFuture;
	_container : InterfaceContainer;
	
	job_create_switch : ARRAY[1..4] OF BOOL;
	execution_step: STRING;
	resume: BOOL;
	abort: BOOL;
	reset : BOOL;
	task_info : __SYSTEM.VAR_INFO;
	
	fb_adslog_reporter : FB_ADSLOG_reporter;
	
	end_of_manual: BOOL;
	init :BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT init THEN
	executor.job_event_reporter := fb_adslog_reporter;
	init := TRUE;
END_IF

IF abort THEN
	executor.abort();
END_IF


CASE _state OF
	0:

		executor.create_container(ContainerType.BATCH, 'Parallel Container');
		_child_executor REF= executor.children.create_container(ContainerType.PARALLEL, 'Static parallel tasks');

		// Static instances
		task_blink_1.own_parameter := T#5S;
		task_blink_1.own_output REF= component1_out;
		task_blink_1.future_name := 'Button 1 blink';
		task_blink_2.own_parameter := T#3S;
		task_blink_2.own_output REF= component2_out;
		task_blink_2.future_name := 'Button 2 blink';
		task_count_1.own_parameter := 3;
		task_count_1.input REF= component3_in;
		task_count_1.output REF= component3_out;
		task_count_1.future_name := 'Button 3 count';
		task_count_2.own_parameter := 5;
		task_count_2.input REF= component4_in;
		task_count_2.output REF= component4_out;
		task_count_2.future_name := 'Button 4 count';
		
		_child_executor.children.add_future(task_blink_1);
		_child_executor.children.add_future(task_blink_2);
		_child_executor.children.add_future(task_count_1);
		_child_executor.children.add_future(task_count_2);
		
		// dynamic instances		
		_child_executor REF= executor.children.create_container(ContainerType.PARALLEL, 'Dynamic parallel tasks');
		
		future_counter_creator.set_parameter(own_parameter := 2,input := component3_in, output := component3_out);
		_child_executor.create_future(future_counter_creator, 'Dynamic job : Count-1');	
		
		future_counter_creator.set_parameter(own_parameter := 5,input := component4_in, output := component4_out);
		_child_executor.create_future(future_counter_creator, 'Dynamic job : Count-2');

		future_counter_creator.set_parameter(own_parameter := 2,input := component3_in, output := component3_out);
		_child_executor.create_future(future_counter_creator, 'Dynamic job : Counter3');

		future_counter_creator.set_parameter(own_parameter := 2,input := component3_in, output := component3_out);
		_child_executor.create_future(future_counter_creator, 'Dynamic job : Counter4'); // 同時実行でなければ同じFutureオブジェクトを使いまわせる
		future_counter_creator.set_parameter(own_parameter := 2,input := component4_in, output := component4_out);
		_child_executor.create_future(future_counter_creator, 'Dynamic job : Counter5');

		executor.id := '1st step';
		executor.continuous_mode := FALSE;
		_state := 1;
	1:
		// シーケンス制御
		IF (executor.current_state = E_FutureExecutionState.wait_for_process AND executor.ready) OR 
			(executor.current_state = E_FutureExecutionState.abort AND resume) THEN
			executor.start();
		END_IF
		IF executor.execute() AND executor.nErrorID = 0 THEN
			_state := 2;
		END_IF
	2:
		executor.create_container(ContainerType.PRALLEL_QUEUE, 'Queued job');
		executor.continuous_mode := TRUE;
		_state := 3;			
	3:
		// キュー
		IF (executor.current_state = E_FutureExecutionState.wait_for_process AND executor.ready) OR 
			(executor.current_state = E_FutureExecutionState.abort AND resume) THEN
			executor.start();
		END_IF
		
		IF job_create_switch[1] THEN
			future_timer_creator.set_parameter(T#5S, component1_out);
			executor.children.create_future(future_timer_creator, 'Button 1 Time blink 5s');
			job_create_switch[1] := FALSE;
		ELSIF job_create_switch[2] THEN
			future_timer_creator.set_parameter(T#3S, component2_out);
			executor.children.create_future(future_timer_creator, 'Button 2 Time blink 3s');
			job_create_switch[2] := FALSE;
		ELSIF  job_create_switch[3] THEN
			job_create_switch[3] := FALSE;
			future_counter_creator.set_parameter(own_parameter := 2,input := component3_in, output := component3_out);
			executor.children.create_future(future_counter_creator, 'Dynamic job : Counter6');
		ELSIF  job_create_switch[4] THEN
			job_create_switch[4] := FALSE;
			future_counter_creator.set_parameter(own_parameter := 4,input := component4_in, output := component4_out);
			executor.children.create_future(future_counter_creator, 'Dynamic job : Counter7');
		END_IF
		IF reset THEN
			executor.quit();
		END_IF
		IF executor.execute() AND executor.nErrorID = 0 THEN
			_state := 4;
		END_IF
	4:
		_state := 0;
		
END_CASE

IF reset THEN
	reset := NOT executor.reset();
END_IF

resume := FALSE;
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="3805" Count="0" />
      <LineId Id="3807" Count="0" />
      <LineId Id="3809" Count="0" />
      <LineId Id="3808" Count="0" />
      <LineId Id="3806" Count="0" />
      <LineId Id="3569" Count="6" />
      <LineId Id="3715" Count="0" />
      <LineId Id="3718" Count="0" />
      <LineId Id="3774" Count="0" />
      <LineId Id="3781" Count="1" />
      <LineId Id="3775" Count="0" />
      <LineId Id="3783" Count="0" />
      <LineId Id="3810" Count="0" />
      <LineId Id="3789" Count="1" />
      <LineId Id="3811" Count="0" />
      <LineId Id="3791" Count="2" />
      <LineId Id="3812" Count="0" />
      <LineId Id="3794" Count="2" />
      <LineId Id="3813" Count="0" />
      <LineId Id="3788" Count="0" />
      <LineId Id="3787" Count="0" />
      <LineId Id="3799" Count="2" />
      <LineId Id="3797" Count="1" />
      <LineId Id="3803" Count="0" />
      <LineId Id="3802" Count="0" />
      <LineId Id="3576" Count="12" />
      <LineId Id="3721" Count="1" />
      <LineId Id="3589" Count="11" />
      <LineId Id="3698" Count="0" />
      <LineId Id="3804" Count="0" />
      <LineId Id="3713" Count="0" />
      <LineId Id="3606" Count="7" />
      <LineId Id="3696" Count="1" />
      <LineId Id="3615" Count="1" />
      <LineId Id="3693" Count="1" />
      <LineId Id="3617" Count="0" />
      <LineId Id="3619" Count="15" />
      <LineId Id="3637" Count="8" />
      <LineId Id="1744" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>