<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ParallelQueueJobContainer" Id="{d5fc8dd4-0f17-45e0-b0bb-86aca529f22f}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FB_ParallelQueueJobContainer IMPLEMENTS InterfaceFuture, InterfaceContainer
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_parent_executor : REFERENCE TO FB_Executor;
	{attribute 'TcEncoding':='UTF-8'}
	_name 	: STRING := 'QUEUE JOB';
	_executors : ARRAY [1..ParamFuturesLib.MAX_TASK_NUM] OF POINTER TO FB_Executor;
	current_executing_future : InterfaceFuture;
	_continuous_mode : BOOL;
	_error_id :UDINT;
	_active_future_index : UDINT;
	// queue controll
	
	_total_futures:	UINT;
	_state : E_FutureExecutionState;
END_VAR
VAR PERSISTENT
	_serial	: ULINT := 1;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="_future_generator" Id="{0ed4ef36-277f-45bf-bd2d-f3582de94507}">
      <Declaration><![CDATA[(* This is the generator that iteratively generates references to FB_executor instances*)
METHOD _future_generator : UINT;
VAR_INPUT
	head	: REFERENCE TO BOOL; // Represent top of iteration
	tail	: REFERENCE TO BOOL; // Represent end of iteration
	future_order_number : REFERENCE TO UINT; // Represent order number of iteration
END_VAR
VAR_INST
	reading	: BOOL := FALSE;
	i: UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT reading THEN
	tail := FALSE;
	future_order_number := 0;
	i := 1;
	_future_generator := 0;
END_IF

IF _total_futures = 0 THEN
	RETURN;
END_IF

head := NOT reading;
reading := TRUE;

WHILE i < ParamFuturesLib.MAX_TASK_NUM AND _executors[i] = 0 DO
	i := i + 1;
END_WHILE

_future_generator := i;
future_order_number := future_order_number + 1;	
i := i + 1;

IF i >= ParamFuturesLib.MAX_TASK_NUM OR future_order_number >= _total_futures THEN
	tail := TRUE;
	reading := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="abort" Id="{a4220ea8-4c54-4bea-912f-7dce6f7f9a5d}">
      <Declaration><![CDATA[METHOD abort : BOOL // Return TRUE if finish.
VAR
	_itter :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_execution_complete :BOOL; 
	_future_id :UINT;
	complete_abort :BOOL;
	i: UINT;

END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_itter := FALSE;
complete_abort := TRUE;

WHILE NOT _itter DO
	i := _future_generator(_itter, _head, _future_id);
	IF _executors[i] <> 0 THEN
		_executor REF= _executors[i]^;
		IF NOT _executor.abort() THEN
			complete_abort := FALSE;
		END_IF
		_executor.execute();
	END_IF
END_WHILE

abort := complete_abort;]]></ST>
      </Implementation>
    </Method>
    <Method Name="add_future" Id="{575f1b25-af42-42f3-980f-93d1f9723f1e}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
{attribute 'OPC.UA.DA.Description' := 'Set future object into the queue.'}
METHOD add_future : REFERENCE TO FB_Executor
VAR_INPUT
	future : InterfaceFuture; // Set future object into the queue.
END_VAR

VAR
	future_order_number: INT;
	_parent_future_id: STRING;
END_VAR
VAR_INST
	i: 	UINT := 1;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Set buffer index

IF _total_futures < ParamFuturesLib.MAX_TASK_NUM THEN
	i := 1;
	WHILE _executors[i] <> 0 DO
		i := i + 1;
	END_WHILE

	// Spawn new task with specified future
	_executors[i] := __NEW(FB_Executor);
	_executors[i]^.future := future;
	_executors[i]^.init();

	// Get parent task id
	IF  __ISVALIDREF(_parent_executor) THEN
		_executors[i]^.job_event_reporter := _parent_executor.job_event_reporter;
		_parent_future_id := _parent_executor.id;
	END_IF
	_executors[i]^.id := CONCAT(_parent_future_id, CONCAT('/', ULINT_TO_STRING(_serial)));
	_serial := _serial + 1;
	IF _serial = 16#FFFFFFFFFFFFFFFF THEN
		_serial := 0;
	END_IF
	_total_futures := _total_futures + 1;
	add_future REF= _executors[i]^;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="continuous_mode" Id="{55ae0a53-6a32-41eb-9047-161f1dc2eac1}">
      <Declaration><![CDATA[PROPERTY continuous_mode : BOOL
]]></Declaration>
      <Set Name="Set" Id="{304be26a-e1a1-4e2d-b995-57db70513b72}">
        <Declaration><![CDATA[VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_future_id :UINT;
	i: UINT;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[_end := FALSE;
_continuous_mode := continuous_mode;

IF _total_futures = 0 THEN
	RETURN;
END_IF

WHILE NOT _end DO
	// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
	i := _future_generator(_head, _end, _future_id);
	IF i > 0 THEN
		IF _executors[i] <> 0 THEN
			_executor REF= _executors[i]^;
			_executor.continuous_mode := continuous_mode;
		END_IF
	END_IF
END_WHILE
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="create_container" Id="{d3848849-3428-4bea-9f6c-02e00494f9fa}">
      <Declaration><![CDATA[METHOD create_container : REFERENCE TO FB_Executor
VAR_INPUT
	container_type	: ContainerType;
	name	: STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE container_type OF
	ContainerType.BATCH:
		create_container REF= THIS^.create_future(GVL.batch_job_container_creator,name);
	ContainerType.PARALLEL:
		create_container REF= THIS^.create_future(GVL.parallel_job_container_creator,name);
	ContainerType.QUEUE:
		create_container REF= THIS^.create_future(GVL.queue_job_container_creator,name);
	ContainerType.PRALLEL_QUEUE:
		create_container REF= THIS^.create_future(GVL.parallel_queue_job_container_creator,name);
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="create_future" Id="{a6fbf469-3fa7-44aa-98b8-2c435493802a}">
      <Declaration><![CDATA[METHOD create_future : REFERENCE TO FB_Executor
VAR_INPUT
	creator	: InterfaceTaskCreator;
	future_name	: STRING;
END_VAR
VAR
	future : InterfaceFuture;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _total_futures < ParamFuturesLib.MAX_TASK_NUM THEN
	future := creator.create_future(future_name);
	create_future REF= THIS^.add_future(future);
	IF __ISVALIDREF(create_future) THEN
		create_future.future_creator := creator;
	ELSE
		creator.destroy_future(future);
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="execute" Id="{13492bc8-de83-46e7-84c1-08243ad582cc}">
      <Declaration><![CDATA[METHOD execute : BOOL // Return TRUE if finish.
VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;
	_future_id :UINT;
	i: UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[execute := FALSE;
_end := FALSE;
_active_future_index := 0;

IF _total_futures = 0 THEN
	RETURN;
END_IF

WHILE NOT _end DO
	// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
	i := _future_generator(_head, _end,_future_id);
		
	IF i > 0 AND _executors[i] <> 0 THEN

		_active_future_index := i;
		_executor REF= _executors[i]^;

		IF _executor.execute() THEN
			IF _executors[i]^.reset() THEN
				__DELETE(_executors[i]);
			END_IF
			_total_futures := _total_futures - 1;
			execute := _total_futures = 0 AND NOT _continuous_mode;
		ELSE
			CASE _executor.current_state OF
				E_FutureExecutionState.idle:
					_executor.init();
				E_FutureExecutionState.wait_for_process:
					_executor.start();
				E_FutureExecutionState.process:
					// Report total futures
					current_executing_future := _executor.future;
				E_FutureExecutionState.abort:
					_executor.start();
			END_CASE
			_error_id := _executor.nErrorID;
		END_IF
	END_IF
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Property Name="future_name" Id="{258dd021-0899-41c6-9f31-e00c5b6e5e49}">
      <Declaration><![CDATA[PROPERTY future_name : STRING // Name of future.
]]></Declaration>
      <Get Name="Get" Id="{7c83f933-09d6-4d08-a180-694058ba2d50}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[future_name := _name;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{73de1cd6-5523-4f64-884b-1af9aa340a17}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_name := future_name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="init" Id="{8aeab0c6-d12b-4b5a-acab-44e82acbfd1b}">
      <Declaration><![CDATA[METHOD init : BOOL // Return TRUE if finish.
VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_future_id :UINT;
	i: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF _total_futures > 0 THEN
	_end := FALSE;
	WHILE NOT _end DO
		// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
		i := _future_generator(_head, _end, _future_id);
		IF i > 0 THEN
			IF _executors[i] <> 0 THEN
				_executors[i]^.job_event_reporter := parent_executor.job_event_reporter;			
			END_IF
		END_IF
	END_WHILE
END_IF
_error_id := 0;
init := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="nErrorID" Id="{d2804e05-15a0-459c-affb-580df4b77f69}">
      <Declaration><![CDATA[PROPERTY nErrorID : UDINT
]]></Declaration>
      <Get Name="Get" Id="{b8528287-068b-44a7-bb16-64178422f5e8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nErrorID := _error_id;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="num_of_future" Id="{e3780a99-051e-4c55-b3d9-b61b3716dbef}">
      <Declaration><![CDATA[PROPERTY num_of_future : UINT]]></Declaration>
      <Get Name="Get" Id="{93ba0b4c-f91b-4ea3-ae0e-b3362102ce9c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[num_of_future := _total_futures;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="parent_executor" Id="{bb2b272c-e65b-4bd8-8b87-309e415ad4a7}">
      <Declaration><![CDATA[PROPERTY parent_executor : REFERENCE TO FB_Executor
]]></Declaration>
      <Get Name="Get" Id="{c06d83cc-a3c6-4bb7-be93-12fb0c9b8e0d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[parent_executor REF= _parent_executor;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{724924e2-90b2-4d9f-9594-1b1a4ad205c8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_parent_executor REF= parent_executor;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="quit" Id="{eb507ffa-ccbe-4af9-b979-8590571248e4}">
      <Declaration><![CDATA[METHOD quit : BOOL // Return TRUE if finish.
]]></Declaration>
      <Implementation>
        <ST><![CDATA[quit := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{f86e09b4-32db-4e5e-b50f-4ae4b077d065}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
{attribute 'OPC.UA.DA.Description' := ''}
METHOD reset : BOOL // Return TRUE if finish.
VAR
	i :UINT;
	_head: BOOL;
	_end: BOOL;
	_future_id: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE _total_futures > 0 DO
	i := _future_generator(_head, _end,_future_id);
	_active_future_index := i;
	IF _executors[i] = 0 THEN
		_error_id := 1;
		reset := TRUE;
		RETURN;
	END_IF
	IF _executors[i]^.reset() THEN
		__DELETE(_executors[i]);
		_total_futures := _total_futures - 1;
	END_IF
END_WHILE
reset := _total_futures = 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="state" Id="{faf7a9be-bed9-4a2b-9e76-a61f03c49a8a}">
      <Declaration><![CDATA[PROPERTY state : E_FutureExecutionState
]]></Declaration>
      <Get Name="Get" Id="{f6a25a43-0f9e-4f74-8f10-df066a4d94bc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[state := _state;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{56b1a6d1-f64f-49fb-a1e5-e0bfc785f533}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_state := state;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_ParallelQueueJobContainer">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer._future_generator">
      <LineId Id="204" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="358" Count="2" />
      <LineId Id="269" Count="0" />
      <LineId Id="308" Count="1" />
      <LineId Id="307" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="368" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="341" Count="0" />
      <LineId Id="335" Count="0" />
      <LineId Id="337" Count="1" />
      <LineId Id="340" Count="0" />
      <LineId Id="339" Count="0" />
      <LineId Id="167" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.abort">
      <LineId Id="31" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="32" Count="2" />
      <LineId Id="28" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="51" Count="2" />
      <LineId Id="50" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.add_future">
      <LineId Id="173" Count="2" />
      <LineId Id="206" Count="0" />
      <LineId Id="178" Count="2" />
      <LineId Id="251" Count="1" />
      <LineId Id="237" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="253" Count="1" />
      <LineId Id="183" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="184" Count="6" />
      <LineId Id="195" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.continuous_mode.Set">
      <LineId Id="12" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="14" Count="5" />
      <LineId Id="36" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="48" Count="4" />
      <LineId Id="24" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.create_container">
      <LineId Id="19" Count="9" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.create_future">
      <LineId Id="22" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="28" Count="2" />
      <LineId Id="24" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.execute">
      <LineId Id="434" Count="0" />
      <LineId Id="314" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="368" Count="3" />
      <LineId Id="315" Count="3" />
      <LineId Id="445" Count="0" />
      <LineId Id="468" Count="1" />
      <LineId Id="448" Count="0" />
      <LineId Id="396" Count="0" />
      <LineId Id="449" Count="0" />
      <LineId Id="322" Count="0" />
      <LineId Id="504" Count="1" />
      <LineId Id="503" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="395" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="478" Count="0" />
      <LineId Id="480" Count="0" />
      <LineId Id="482" Count="3" />
      <LineId Id="491" Count="1" />
      <LineId Id="486" Count="0" />
      <LineId Id="493" Count="0" />
      <LineId Id="481" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="479" Count="0" />
      <LineId Id="349" Count="1" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.future_name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.future_name.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.init">
      <LineId Id="65" Count="11" />
      <LineId Id="47" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.nErrorID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.num_of_future.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.parent_executor.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.parent_executor.Set">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.quit">
      <LineId Id="35" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.reset">
      <LineId Id="6" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.state.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ParallelQueueJobContainer.state.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>