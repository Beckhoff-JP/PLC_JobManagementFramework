<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Executor" Id="{09518444-1d1d-452e-9e8f-647b2f8c5e33}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FB_Executor
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	{attribute 'TcEncoding':='UTF-8'}
	_id : T_MaxString;
	_done : BOOL;
	_ready : BOOL;
	_start : BOOL;
	_abort : BOOL;
	_quit : BOOL;
	 {attribute 'TcAnalytics'}
	 _state :E_FutureExecutionState := E_FutureExecutionState.idle;
	_last_state  :E_FutureExecutionState;
	_error_id : UDINT;
	_aborting :BOOL;
	_quitting :BOOL;
	_interface_container : InterfaceContainer := 0;
	_job_event_reporter: InterfaceJobEventReporter;
	_future_creator : InterfaceTaskCreator;
	_future : InterfaceFuture;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="abort" Id="{4a5ac73d-0cc9-4d9e-84fc-915012ed9ab4}">
      <Declaration><![CDATA[METHOD abort : BOOL // Return TRUE if finish.
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _state = E_FutureExecutionState.init OR
   _state = E_FutureExecutionState.process OR
   _state = E_FutureExecutionState.quit THEN
	_abort := TRUE;	
END_IF

IF 	_abort AND _state = E_FutureExecutionState.abort THEN
	abort := NOT _aborting;
ELSE
	abort := TRUE;
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Property Name="children" Id="{db662496-7037-4faa-b7c6-23f2d18395d1}">
      <Declaration><![CDATA[PROPERTY children : InterfaceContainer // Accesser for interface pointer to child container instance.]]></Declaration>
      <Get Name="Get" Id="{b5bd3ec9-ba69-4ba1-8ec7-43c8c7dc9772}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[children := _interface_container;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="continuous_mode" Id="{f813b158-0532-443d-867f-f3f4c7f7b526}">
      <Declaration><![CDATA[PROPERTY continuous_mode : bool // Make true if keep executing state after all jobs be finished.]]></Declaration>
      <Set Name="Set" Id="{d13ba071-7139-40fe-a4d6-bf1103d7257f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF _future <> 0 THEN
	IF __QUERYINTERFACE(_future, _interface_container) THEN
		_interface_container.continuous_mode := continuous_mode;
	END_IF	
END_IF
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="create_container" Id="{3ee4e0b3-d5fa-4216-b2fc-b9b451f3b414}">
      <Declaration><![CDATA[METHOD create_container : InterfaceContainer // Make container object onto child.
VAR_INPUT
	container_type : ContainerType; // specify container type
	name: STRING;	// specify future name
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.reset() THEN
	CASE container_type OF
		ContainerType.BATCH:
			THIS^.future := create_future(GVL.batch_job_container_creator, name);
		ContainerType.PARALLEL:
			THIS^.future := create_future(GVL.parallel_job_container_creator, name);
		ContainerType.QUEUE:
			THIS^.future := create_future(GVL.queue_job_container_creator, name);
		ContainerType.PRALLEL_QUEUE:
			THIS^.future := create_future(GVL.parallel_queue_job_container_creator, name);
	END_CASE
	THIS^.init();
	create_container := THIS^.children;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="create_future" Id="{4dbfc7cf-833f-45fc-a4dd-f4a1587ef4ef}">
      <Declaration><![CDATA[METHOD create_future : InterfaceFuture // Create future dynamically.
VAR_INPUT
	creator : InterfaceTaskCreator; // Specify creator object by which Interface Task Creator implemented.
	future_name: STRING; // Spcfigy future name.
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_future_creator := creator;
IF _future_creator <> 0 THEN
	THIS^.future := creator.create_future(future_name);
END_IF
create_future := _future;]]></ST>
      </Implementation>
    </Method>
    <Property Name="current_state" Id="{9bdc45ea-e038-402f-9e8e-3b1c363b70b4}">
      <Declaration><![CDATA[{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Description' := 'Current state of this executor object.'}
PROPERTY current_state : E_FutureExecutionState // Get current job state]]></Declaration>
      <Get Name="Get" Id="{6d7ef6bc-7830-4957-91e4-53fd4bd8f4ba}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[current_state := _state;	
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="done" Id="{4120264c-9741-4f55-a3ec-37db4b2fdd1d}">
      <Declaration><![CDATA[PROPERTY done : BOOL // Present true if process be finished.]]></Declaration>
      <Get Name="Get" Id="{adfb9284-a38c-48f0-99cc-b8f7d36d7c03}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[done := _done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="execute" Id="{12a00ca6-fc73-4fe5-8b5c-2a7a9dcde6d1}">
      <Declaration><![CDATA[METHOD execute : BOOL // Execute future process and return TRUE if all task are finished.
VAR_INST
	_state_mem :E_FutureExecutionState;
	_logging :BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _future = 0 THEN
	execute := TRUE;
	RETURN;
ELSE
	execute := FALSE;
END_IF

IF _abort THEN
	_state := E_FutureExecutionState.abort;
	_error_id := 16#FFFFFFFF;
END_IF
_abort := FALSE;


IF _quit THEN
	_state := E_FutureExecutionState.quit;
END_IF
_quit := FALSE;


CASE _state OF
	E_FutureExecutionState.idle:
		IF _future.state = E_FutureExecutionState.idle OR _future.state = E_FutureExecutionState.finish THEN
			IF init() THEN
				_state := E_FutureExecutionState.init;
			END_IF
		END_IF
	E_FutureExecutionState.init:
		IF _future.init() THEN
			IF _future.nErrorID = 0 THEN
				_state := E_FutureExecutionState.wait_for_process;
			ELSE
				_error_id := _future.nErrorID;
				_state := E_FutureExecutionState.abort;
			END_IF
		END_IF
	E_FutureExecutionState.wait_for_process: 
		IF _start THEN
			_state := E_FutureExecutionState.process;
			_start := FALSE;
		END_IF
	E_FutureExecutionState.process: 
		IF _future.execute() THEN
			IF _future.nErrorID = 0 THEN
				_state := E_FutureExecutionState.quit;
				_done := TRUE;
			ELSE
				_error_id := _future.nErrorID;
				_state := E_FutureExecutionState.abort;
			END_IF
		END_IF
	E_FutureExecutionState.abort:
		IF _aborting AND _future.abort() THEN
			_aborting := FALSE;
		END_IF
		IF _start AND NOT _aborting THEN
			_state := _last_state;
			_start := FALSE;
		ELSE
			_start := FALSE;
		END_IF
	E_FutureExecutionState.quit:
		IF _future.quit() THEN
			IF _future.nErrorID = 0 THEN
				_state := E_FutureExecutionState.finish;
			ELSE
				_error_id := _future.nErrorID;
				_state := E_FutureExecutionState.abort;
			END_IF
			_quitting := FALSE;
		END_IF
	E_FutureExecutionState.finish:
		IF NOT _logging THEN
			//IF _future_creator <> 0 AND _future <> 0 THEN
			//	_future_creator.destroy_future(_future);
			//	_future := 0;
			//END_IF
			execute := TRUE;
		END_IF
END_CASE

IF _state = E_FutureExecutionState.wait_for_process OR 
	(_state = E_FutureExecutionState.abort AND NOT _aborting) THEN
	_ready := TRUE;
ELSE
	_ready := FALSE;
END_IF



IF _state <> _state_mem THEN
	_last_state := _state_mem;

	IF _state = E_FutureExecutionState.init OR
		_state = E_FutureExecutionState.process OR
		_state = E_FutureExecutionState.quit THEN
		_error_id := 0;
	END_IF

	IF _state = E_FutureExecutionState.abort THEN
		_aborting := TRUE;
	END_IF
	
	IF _state = E_FutureExecutionState.quit THEN
		_quitting := TRUE;
	END_IF
		
	IF _job_event_reporter <> 0 AND _state >= E_FutureExecutionState.idle AND _state <= E_FutureExecutionState.finish THEN
		// reporter
		_logging := TRUE;
	END_IF
END_IF

_state_mem := _state;

IF _logging THEN
	IF _job_event_reporter.report(
			old_state := _last_state,
			new_state := _state,
			record_time := F_GetSystemTime(),
			executor := THIS^
	) THEN
		_logging := FALSE;
	END_IF
END_IF

IF _state > E_FutureExecutionState.idle AND _future <> 0 THEN
	_future.state := _state;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="future" Id="{a5f34e34-fd86-442a-a2b3-dcfdacffba84}">
      <Declaration><![CDATA[PROPERTY future : InterfaceFuture // Set future instance direct.]]></Declaration>
      <Get Name="Get" Id="{ea3475fd-42f3-40d5-80b9-94fefa3dce7f}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[future := _future;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1c600ba1-a530-4be6-883c-03a190a9123a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_future := future;
_future.state := _state;
IF __QUERYINTERFACE(_future, _interface_container) THEN
	_interface_container.parent_executor REF= THIS^;
ELSE
	_interface_container := 0;
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="future_creator" Id="{4ef3d23b-70fc-42e7-92d1-5df42cf5ccf9}">
      <Declaration><![CDATA[PROPERTY future_creator : InterfaceTaskCreator // Set creator instance.]]></Declaration>
      <Set Name="Set" Id="{73c997cd-b03a-40d8-97e1-94183b40cdc9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_future_creator := future_creator;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="id" Id="{cfcf1743-1715-4af2-a0a4-cd9f1ebd1808}">
      <Declaration><![CDATA[PROPERTY id : T_MaxString // Get job id.
]]></Declaration>
      <Get Name="Get" Id="{5863c94c-93ce-4810-8c6f-f18910d5e32a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[id := _id;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{9e8cd938-613c-4a5e-bd20-a66e0b88a473}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_id := id;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="init" Id="{204f5707-ec01-4438-ae9f-8cbe74e0162c}">
      <Declaration><![CDATA[METHOD init : BOOL // Return TRUE if finish.
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_done := FALSE;
_abort := FALSE;
_ready := FALSE;
_start := FALSE;
_state := E_FutureExecutionState.init;
_error_id := 0;
IF _future <> 0 THEN
	_future.init();
END_IF

INIT := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="job_event_reporter" Id="{7070112e-2fb6-433d-85f5-f36a183c0a1e}">
      <Declaration><![CDATA[PROPERTY job_event_reporter : InterfaceJobEventReporter]]></Declaration>
      <Get Name="Get" Id="{150bf335-b5f5-4890-8f09-a0bd37e70e48}">
        <Declaration><![CDATA[
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[job_event_reporter := _job_event_reporter;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4cb4a4bf-e492-4795-8469-65c6601636a4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_job_event_reporter := job_event_reporter;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="last_state" Id="{02f59fbb-3554-446d-b45f-63f705bf0087}">
      <Declaration><![CDATA[PROPERTY last_state : E_FutureExecutionState]]></Declaration>
      <Get Name="Get" Id="{68fa5637-46a2-41df-8fb4-fd6bb35fe1de}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[last_state := _last_state;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="nErrorID" Id="{b8e1cf4d-b2aa-4996-8037-fe94c831ada6}">
      <Declaration><![CDATA[PROPERTY nErrorID : UDINT // Present error code when each process,init(), execute(), quit() are finished. '0' represent normal condition without any errors.
]]></Declaration>
      <Get Name="Get" Id="{279bd7d5-87e3-414a-919d-b55c6d45fe5f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nErrorID := _error_id;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="quit" Id="{a3ed0ceb-2877-462b-84db-f716a8c9598e}">
      <Declaration><![CDATA[METHOD quit : BOOL // Return TRUE if finish.
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _state = E_FutureExecutionState.init OR
   _state = E_FutureExecutionState.process OR
   _state = E_FutureExecutionState.quit THEN
	_quit := TRUE;	
END_IF

IF 	_quit AND _state = E_FutureExecutionState.quit THEN
	quit := NOT _quitting;
ELSE
	quit := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="ready" Id="{a76eb28b-8e38-458e-b69a-c73f1b377610}">
      <Declaration><![CDATA[PROPERTY ready : BOOL]]></Declaration>
      <Get Name="Get" Id="{b15bc61f-5bad-464a-9e63-5e877e3aa3c7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ready := _ready;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="reset" Id="{32d5d6a5-da71-471a-b4b9-590194585265}">
      <Declaration><![CDATA[METHOD reset : BOOL // Return TRUE if finish.
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF __QUERYINTERFACE(_future, _interface_container) THEN
	reset := _interface_container.reset();
ELSE
	reset := TRUE;
END_IF
IF reset AND _future_creator <> 0 AND _future <> 0 THEN
	_future := _future_creator.destroy_future(_future);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="start" Id="{fb7671b6-91ac-4f18-8e41-b81f64039055}">
      <Declaration><![CDATA[METHOD start : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_start := TRUE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Executor">
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.abort">
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="1" />
      <LineId Id="17" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.children.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.continuous_mode.Set">
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="10" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.create_container">
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="19" Count="2" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.create_future">
      <LineId Id="6" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.current_state.Get">
      <LineId Id="7" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.done.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.execute">
      <LineId Id="8" Count="2" />
      <LineId Id="50" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="165" Count="1" />
      <LineId Id="168" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="239" Count="2" />
      <LineId Id="246" Count="0" />
      <LineId Id="13" Count="2" />
      <LineId Id="258" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="122" Count="1" />
      <LineId Id="78" Count="0" />
      <LineId Id="22" Count="3" />
      <LineId Id="92" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="29" Count="3" />
      <LineId Id="55" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="34" Count="2" />
      <LineId Id="117" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="113" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="169" Count="1" />
      <LineId Id="112" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="81" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="124" Count="1" />
      <LineId Id="85" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="41" Count="1" />
      <LineId Id="301" Count="0" />
      <LineId Id="313" Count="2" />
      <LineId Id="312" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="230" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="268" Count="1" />
      <LineId Id="274" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="275" Count="1" />
      <LineId Id="272" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="66" Count="2" />
      <LineId Id="176" Count="0" />
      <LineId Id="179" Count="1" />
      <LineId Id="183" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="188" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="250" Count="2" />
      <LineId Id="249" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="220" Count="7" />
      <LineId Id="219" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="278" Count="1" />
      <LineId Id="243" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.future.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.future.Set">
      <LineId Id="2" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="1" />
      <LineId Id="16" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.future_creator.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.id.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.id.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.init">
      <LineId Id="6" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="7" Count="1" />
      <LineId Id="33" Count="1" />
      <LineId Id="43" Count="0" />
      <LineId Id="45" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.job_event_reporter.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.job_event_reporter.Set">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.last_state.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.nErrorID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.quit">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.ready.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.reset">
      <LineId Id="6" Count="3" />
      <LineId Id="5" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_Executor.start">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>