<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_QueueJobContainer" Id="{01d51c34-d9d2-4596-9c6a-f2560502cf89}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FB_QueueJobContainer IMPLEMENTS InterfaceFuture, InterfaceContainer
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	_parent_executor : REFERENCE TO FB_Executor;
	{attribute 'TcEncoding':='UTF-8'}
	_name 	: STRING := 'QUEUE JOB';
	_executors : ARRAY [1..ParamFuturesLib.MAX_TASK_NUM] OF POINTER TO FB_Executor;
	current_executing_future : InterfaceFuture;
	_continuous_mode : BOOL;
	_error_id :UDINT;
	
	// queue controll
	
	_total_futures:	UINT;
	nWriteIndex: 	UINT := 1;
	nReadIndex: 	UINT := 1;
	_state : E_FutureExecutionState;
END_VAR
VAR PERSISTENT
	_serial	: ULINT := 1;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="_future_generator" Id="{9ef6efa5-8390-4d8b-8176-a5198402cdfe}">
      <Declaration><![CDATA[(* This is the generator that iteratively generates references to FB_executor instances*)
METHOD _future_generator : UINT;
VAR_INPUT
	head	: REFERENCE TO BOOL; // Represent top of iteration
	tail	: REFERENCE TO BOOL; // Represent end of iteration
	future_order_number : REFERENCE TO UINT; // Represent order number of iteration
END_VAR
VAR_INST
	reading	: BOOL := FALSE;
	i :UINT;
	a : DINT;
	carry_flag : BOOL;
	limitter : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT reading THEN
	carry_flag := FALSE;
	tail := FALSE;
	i := nReadIndex;
END_IF

head := NOT reading;
reading := TRUE;

// calculate order number of executing futures by queue address
IF _total_futures = 0 THEN
	future_order_number := 0;
ELSIF carry_flag THEN // 
	future_order_number := ParamFuturesLib.MAX_TASK_NUM;
ELSIF nWriteIndex > nReadIndex THEN // Normal case
	future_order_number := i - nReadIndex + 1;
ELSE // 
	
	a := i - nReadIndex + 1;
	IF a < 0 THEN
		a := a + ParamFuturesLib.MAX_TASK_NUM;
	END_IF
	future_order_number := DINT_TO_UINT(a);
	IF future_order_number = ParamFuturesLib.MAX_TASK_NUM - 1 THEN
		carry_flag := TRUE;
	END_IF
END_IF


//Set buffer index
IF _total_futures <= future_order_number THEN
	tail := TRUE;
	reading := FALSE;
END_IF

_future_generator := i;

i := i + 1;

IF i > ParamFuturesLib.MAX_TASK_NUM THEN
	i := 1;
END_IF

IF NOT tail THEN
	limitter := limitter + 1;
	IF limitter > ParamFuturesLib.MAX_TASK_NUM THEN
		tail := TRUE;
	END_IF
END_IF

IF tail THEN
	limitter := 0;
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="abort" Id="{dff13b45-18d6-46c3-b266-e17169a248ba}">
      <Declaration><![CDATA[METHOD abort : BOOL // Return TRUE if finish.
VAR
	_itter :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_execution_complete :BOOL; 
	_future_id :UINT;
	complete_abort :BOOL;
	i: UINT;

END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_itter := FALSE;
complete_abort := TRUE;

WHILE NOT _itter DO
	i := _future_generator(_itter, _head, _future_id);
	IF _executors[i] <> 0 THEN
		_executor REF= _executors[i]^;
		IF NOT _executor.abort() THEN
			complete_abort := FALSE;
		END_IF
		_executor.execute();
	END_IF
END_WHILE

abort := complete_abort;]]></ST>
      </Implementation>
    </Method>
    <Method Name="add_future" Id="{3eaa31a6-a409-490a-a57d-dfc5fe8742fe}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
{attribute 'OPC.UA.DA.Description' := 'Set future object into the queue.'}
METHOD add_future : REFERENCE TO FB_Executor
VAR_INPUT
	future : InterfaceFuture; // Set future object into the queue.
END_VAR

VAR
	_parent_future_id: STRING;
END_VAR
VAR_INST
	carry_flag:		BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Set buffer index

IF _total_futures < ParamFuturesLib.MAX_TASK_NUM AND future <> 0 THEN
	// Spawn new task with specified feature
	_executors[nWriteIndex] := __NEW(FB_Executor);
	_executors[nWriteIndex]^.future := future;
	_executors[nWriteIndex]^.init();

	add_future REF= _executors[nWriteIndex]^;

	// Get parent tssk id
	IF  __ISVALIDREF(_parent_executor) THEN
		_executors[nWriteIndex]^.job_event_reporter := _parent_executor.job_event_reporter;
		_parent_future_id := _parent_executor.id;
	END_IF

	// Set my task ID
	_executors[nWriteIndex]^.id := CONCAT(_parent_future_id, CONCAT('/', ULINT_TO_STRING(_serial)));
	
	// generate new serial number
	IF _serial = 16#FFFFFFFFFFFFFFFF THEN
		_serial := 0;
	END_IF
	_serial := _serial + 1;


	nWriteIndex := nWriteIndex + 1;
	IF nWriteIndex > ParamFuturesLib.MAX_TASK_NUM THEN
		nWriteIndex := 1;
	END_IF
	
	IF nWriteIndex = nReadIndex AND _total_futures = ParamFuturesLib.MAX_TASK_NUM - 1 THEN 
		carry_flag := TRUE;
	END_IF

	// calculate order number of executing futures by queue address
	IF carry_flag THEN
		_total_futures := ParamFuturesLib.MAX_TASK_NUM;
		carry_flag := FALSE;
	ELSIF nWriteIndex >= nReadIndex THEN
		_total_futures := nWriteIndex - nReadIndex;
	ELSE
		_total_futures := ParamFuturesLib.MAX_TASK_NUM - nReadIndex + nWriteIndex;
	END_IF

END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="continuous_mode" Id="{3204078e-889d-4289-ba18-142690cb38dc}">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY continuous_mode : BOOL
]]></Declaration>
      <Set Name="Set" Id="{1426064c-acf3-454e-9c66-671031f26fd1}">
        <Declaration><![CDATA[VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_future_id :UINT;
	i: UINT;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[_end := FALSE;
_continuous_mode := continuous_mode;

IF _total_futures = 0 THEN
	RETURN;
END_IF

WHILE NOT _end DO
	// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
	i := _future_generator(_head, _end, _future_id);
	IF i > 0 THEN
		IF _executors[i] <> 0 THEN
			_executor REF= _executors[i]^;
			_executor.continuous_mode := continuous_mode;
		END_IF
	END_IF
END_WHILE
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="create_container" Id="{40d3970e-dedc-42f4-8b0c-28d1359d3657}">
      <Declaration><![CDATA[METHOD create_container : REFERENCE TO FB_Executor
VAR_INPUT
	container_type	: ContainerType;
	name	: STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE container_type OF
	ContainerType.BATCH:
		create_container REF= THIS^.create_future(GVL.batch_job_container_creator,name);
	ContainerType.PARALLEL:
		create_container REF= THIS^.create_future(GVL.parallel_job_container_creator,name);
	ContainerType.QUEUE:
		create_container REF= THIS^.create_future(GVL.queue_job_container_creator,name);
	ContainerType.PRALLEL_QUEUE:
		create_container REF= THIS^.create_future(GVL.parallel_queue_job_container_creator,name);
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="create_future" Id="{cd2b85fe-0eb0-4548-9136-d71f40998c90}">
      <Declaration><![CDATA[METHOD create_future : REFERENCE TO FB_Executor
VAR_INPUT
	creator	: InterfaceTaskCreator;
	future_name	: STRING;
END_VAR
VAR
	future : InterfaceFuture;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _total_futures < ParamFuturesLib.MAX_TASK_NUM THEN
	future := creator.create_future(future_name);
	create_future REF= THIS^.add_future(future);
	IF __ISVALIDREF(create_future) THEN
		create_future.future_creator := creator;
	ELSE
		creator.destroy_future(future);
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="dequeue" Id="{042fad97-faf7-4c78-94a6-8caae6e0dedd}">
      <Declaration><![CDATA[METHOD dequeue : UINT;
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Set buffer index
IF _total_futures > 0 THEN
	dequeue := nReadIndex;
	nReadIndex := nReadIndex + 1;
	IF nReadIndex > ParamFuturesLib.MAX_TASK_NUM THEN
		nReadIndex := 1;
	END_IF
	// calculate order number of executing futures by queue address
	IF nWriteIndex >= nReadIndex THEN
		_total_futures := nWriteIndex - nReadIndex;
	ELSE
		_total_futures := ParamFuturesLib.MAX_TASK_NUM - nReadIndex + nWriteIndex;
	END_IF
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="execute" Id="{08489d90-f655-4964-9e80-20dd5ed12d14}">
      <Declaration><![CDATA[METHOD execute : BOOL // Return TRUE if finish.
VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_execution_complete :BOOL; 
	_future_id :UINT;
	complete_last_proess :BOOL := FALSE;
	i: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[complete_last_proess := FALSE;
_end := FALSE;

IF _total_futures = 0 THEN
	RETURN;
END_IF

WHILE NOT _end DO
	// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
	i :=  _future_generator(_head, _end,_future_id);
	
	IF i > 0 AND _executors[i] <> 0 THEN
		_executor REF= _executors[i]^;
	
		_execution_complete := _executor.execute();
		
		CASE _executor.current_state OF
			E_FutureExecutionState.idle:
				_executor.init();
			E_FutureExecutionState.wait_for_process:
				IF _executor.ready AND (complete_last_proess OR _head) THEN
					_executor.start();
				END_IF
			E_FutureExecutionState.process:
				// Report total futures
				current_executing_future := _executor.future;
			E_FutureExecutionState.abort:
				_executor.start();
		END_CASE
		
		complete_last_proess := _executor.done;	
		
		IF _execution_complete THEN
			IF _head THEN
				// キューの先頭がfinish状態になれば取り出してキューから削除する
				IF _executors[i]^.reset() THEN
					__DELETE(_executors[i]);
				END_IF
				dequeue();
			END_IF
			execute := _end AND NOT _continuous_mode;			
		END_IF
		
		_error_id := _executor.nErrorID;
		
	END_IF
END_WHILE

]]></ST>
      </Implementation>
    </Method>
    <Property Name="future_name" Id="{cd551c96-5f0e-4c19-92ba-d801881f2141}">
      <Declaration><![CDATA[PROPERTY future_name : STRING // Name of future.
]]></Declaration>
      <Get Name="Get" Id="{7dfb6da3-9288-4cf8-9cc3-fc54e71db0e4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[future_name := _name;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{efe2f0ee-1ad3-4590-a721-4ddb020ecc9c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_name := future_name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="init" Id="{e2e928e1-a3fb-4663-8042-bd87f35fc43e}">
      <Declaration><![CDATA[METHOD init : BOOL // Return TRUE if finish.
VAR
	_end :BOOL;
	_head : BOOL;
	_executor: REFERENCE TO FB_Executor;	
	_future_id :UINT;
	i: UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF _total_futures > 0 THEN
	_end := FALSE;
	WHILE NOT _end DO
		// キューインされたFB_executorインスタンスを順に取り出すイテレータ。_endがTRUEになれば全て取り出し完了。_headは先頭のみtrueになる。
		i := _future_generator(_head, _end, _future_id);
		IF i > 0 THEN
			IF _executors[i] <> 0 THEN
				_executors[i]^.job_event_reporter := parent_executor.job_event_reporter;			
			END_IF
		END_IF
	END_WHILE
END_IF
_error_id := 0;
init := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="nErrorID" Id="{3eba7aed-5e8a-4b9b-b95f-99dcc6f8ff92}">
      <Declaration><![CDATA[PROPERTY nErrorID : UDINT
]]></Declaration>
      <Get Name="Get" Id="{d00d87b0-17da-4599-8bcd-6a816cab8b01}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nErrorID := _error_id;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="num_of_future" Id="{bc6e8b6a-31ea-4f87-a96f-95a760d04a2f}">
      <Declaration><![CDATA[PROPERTY num_of_future : UINT]]></Declaration>
      <Get Name="Get" Id="{4a0bec70-2acb-4789-9bfc-8f7629e3cd58}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[num_of_future := _total_futures;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="parent_executor" Id="{a5749f82-554f-46b7-8447-51edf8e25b6c}">
      <Declaration><![CDATA[PROPERTY parent_executor : REFERENCE TO FB_Executor
]]></Declaration>
      <Get Name="Get" Id="{391eb227-76bc-4912-8808-13fd846b062f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[parent_executor REF= _parent_executor;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ad8b1942-7b04-476f-9756-5aae8abab4d6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_parent_executor REF= parent_executor;
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="quit" Id="{3f8451e6-e72b-40b4-9f28-55afc0d9df13}">
      <Declaration><![CDATA[METHOD quit : BOOL // Return TRUE if finish.
]]></Declaration>
      <Implementation>
        <ST><![CDATA[quit := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{d3e31e1e-41be-4852-9255-b76affe4c87f}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' := '1'}
{attribute 'OPC.UA.DA.Description' := ''}
METHOD reset : BOOL // Return TRUE if finish.
VAR
	i :UINT;
	_index: UDINT;
	_head: BOOL;
	_end: BOOL;
	_future_id: UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE _total_futures > 0 DO
	i := _future_generator(_head, _end,_future_id);
	IF _executors[i] = 0 THEN
		_error_id := 1;
		reset := TRUE;
		RETURN;
	END_IF
	IF _executors[i]^.reset() THEN
		__DELETE(_executors[i]);
		_total_futures := _total_futures - 1;
	END_IF
END_WHILE
reset := _total_futures = 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="state" Id="{a4993764-756f-4db6-9ba3-935ae7f86c5c}">
      <Declaration><![CDATA[{warning 'add property implementation'}
PROPERTY state : E_FutureExecutionState
]]></Declaration>
      <Get Name="Get" Id="{ec059c33-b0b8-4d15-95e5-901b7731a0ec}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[state := _state;
]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0ef7cbb6-7e34-4254-9e33-e605df9f012f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_state := state;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_QueueJobContainer">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer._future_generator">
      <LineId Id="204" Count="5" />
      <LineId Id="211" Count="10" />
      <LineId Id="271" Count="0" />
      <LineId Id="222" Count="15" />
      <LineId Id="291" Count="0" />
      <LineId Id="238" Count="16" />
      <LineId Id="167" Count="0" />
      <LineId Id="290" Count="0" />
      <LineId Id="289" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.abort">
      <LineId Id="65" Count="13" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.add_future">
      <LineId Id="21" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="164" Count="1" />
      <LineId Id="157" Count="0" />
      <LineId Id="169" Count="4" />
      <LineId Id="167" Count="1" />
      <LineId Id="38" Count="0" />
      <LineId Id="29" Count="2" />
      <LineId Id="121" Count="3" />
      <LineId Id="41" Count="0" />
      <LineId Id="54" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.continuous_mode.Set">
      <LineId Id="30" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="32" Count="13" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.create_container">
      <LineId Id="19" Count="9" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.create_future">
      <LineId Id="39" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="41" Count="6" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.dequeue">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="12" Count="3" />
      <LineId Id="22" Count="4" />
      <LineId Id="21" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.execute">
      <LineId Id="313" Count="1" />
      <LineId Id="368" Count="3" />
      <LineId Id="315" Count="2" />
      <LineId Id="319" Count="0" />
      <LineId Id="395" Count="0" />
      <LineId Id="320" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="321" Count="1" />
      <LineId Id="408" Count="1" />
      <LineId Id="415" Count="2" />
      <LineId Id="419" Count="7" />
      <LineId Id="411" Count="0" />
      <LineId Id="384" Count="0" />
      <LineId Id="337" Count="4" />
      <LineId Id="438" Count="0" />
      <LineId Id="441" Count="0" />
      <LineId Id="440" Count="0" />
      <LineId Id="342" Count="1" />
      <LineId Id="383" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="347" Count="4" />
      <LineId Id="291" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.future_name.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.future_name.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.init">
      <LineId Id="4" Count="0" />
      <LineId Id="63" Count="10" />
      <LineId Id="45" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.nErrorID.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.num_of_future.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.parent_executor.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.parent_executor.Set">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.quit">
      <LineId Id="35" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.reset">
      <LineId Id="41" Count="1" />
      <LineId Id="62" Count="3" />
      <LineId Id="61" Count="0" />
      <LineId Id="45" Count="3" />
      <LineId Id="50" Count="0" />
      <LineId Id="4" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.state.Get">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_QueueJobContainer.state.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>